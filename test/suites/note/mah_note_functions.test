// Test note creation with various tone/accidental/octave combinations

// Test all seven tones with natural accidentals
ASSERT_N(NOTE(C, 0, MAH_OCTAVE_4), NOTE(C, 0, MAH_OCTAVE_4));
ASSERT_N(NOTE(D, 0, MAH_OCTAVE_4), NOTE(D, 0, MAH_OCTAVE_4));
ASSERT_N(NOTE(E, 0, MAH_OCTAVE_4), NOTE(E, 0, MAH_OCTAVE_4));
ASSERT_N(NOTE(F, 0, MAH_OCTAVE_4), NOTE(F, 0, MAH_OCTAVE_4));
ASSERT_N(NOTE(G, 0, MAH_OCTAVE_4), NOTE(G, 0, MAH_OCTAVE_4));
ASSERT_N(NOTE(A, 0, MAH_OCTAVE_4), NOTE(A, 0, MAH_OCTAVE_4));
ASSERT_N(NOTE(B, 0, MAH_OCTAVE_4), NOTE(B, 0, MAH_OCTAVE_4));

// Test with various accidentals
ASSERT_N(NOTE(C, -2, MAH_OCTAVE_4), NOTE(C, -2, MAH_OCTAVE_4));  // Double flat
ASSERT_N(NOTE(C, -1, MAH_OCTAVE_4), NOTE(C, -1, MAH_OCTAVE_4));  // Flat
ASSERT_N(NOTE(C, 1, MAH_OCTAVE_4), NOTE(C, 1, MAH_OCTAVE_4));    // Sharp
ASSERT_N(NOTE(C, 2, MAH_OCTAVE_4), NOTE(C, 2, MAH_OCTAVE_4));    // Double sharp

// Test edge cases with extreme accidentals
ASSERT_N(NOTE(F, MAH_DBFLAT, MAH_OCTAVE_3), NOTE(F, MAH_DBFLAT, MAH_OCTAVE_3));
ASSERT_N(NOTE(B, MAH_DBSHARP, MAH_OCTAVE_0), NOTE(B, MAH_DBSHARP, MAH_OCTAVE_0));

// Test various octave ranges
ASSERT_N(NOTE(C, 0, MAH_OCTAVE_0), NOTE(C, 0, MAH_OCTAVE_0));    // Very low pitch
ASSERT_N(NOTE(C, 0, MAH_OCTAVE_1), NOTE(C, 0, MAH_OCTAVE_1));
ASSERT_N(NOTE(C, 0, MAH_OCTAVE_2), NOTE(C, 0, MAH_OCTAVE_2));
ASSERT_N(NOTE(C, 0, MAH_OCTAVE_3), NOTE(C, 0, MAH_OCTAVE_3));
ASSERT_N(NOTE(C, 0, MAH_OCTAVE_5), NOTE(C, 0, MAH_OCTAVE_5));
ASSERT_N(NOTE(C, 0, MAH_OCTAVE_6), NOTE(C, 0, MAH_OCTAVE_6));
ASSERT_N(NOTE(C, 0, MAH_OCTAVE_7), NOTE(C, 0, MAH_OCTAVE_7));
ASSERT_N(NOTE(C, 0, MAH_OCTAVE_8), NOTE(C, 0, MAH_OCTAVE_8));
ASSERT_N(NOTE(C, 0, MAH_OCTAVE_9), NOTE(C, 0, MAH_OCTAVE_9));    // Very high pitch

// Test note inequality (different tones)
ASSERT(!comp_note(NOTE(C, 0, MAH_OCTAVE_4), NOTE(D, 0, MAH_OCTAVE_4)), "Notes should be different");
ASSERT(!comp_note(NOTE(D, 0, MAH_OCTAVE_4), NOTE(E, 0, MAH_OCTAVE_4)), "Notes should be different");

// Test note inequality (different accidentals)
ASSERT(!comp_note(NOTE(C, 0, MAH_OCTAVE_4), NOTE(C, 1, MAH_OCTAVE_4)), "Notes should be different");
ASSERT(!comp_note(NOTE(C, -1, MAH_OCTAVE_4), NOTE(C, 1, MAH_OCTAVE_4)), "Notes should be different");

// Test note inequality (different octaves)
ASSERT(!comp_note(NOTE(C, 0, MAH_OCTAVE_4), NOTE(C, 0, MAH_OCTAVE_5)), "Notes should be different");
ASSERT(!comp_note(NOTE(A, 0, MAH_OCTAVE_3), NOTE(A, 0, MAH_OCTAVE_4)), "Notes should be different");

// Test extreme combinations
ASSERT_N(NOTE(G, -4, MAH_OCTAVE_1), NOTE(G, -4, MAH_OCTAVE_1));      // Max flats with low pitch
ASSERT_N(NOTE(B, 4, MAH_OCTAVE_0), NOTE(B, 4, MAH_OCTAVE_0));        // Max sharps with very low pitch
ASSERT_N(NOTE(F, 2, MAH_OCTAVE_9), NOTE(F, 2, MAH_OCTAVE_9));        // Double sharp with high pitch

// Test with various accidental values beyond standard enum
ASSERT_N(NOTE(D, 3, MAH_OCTAVE_2), NOTE(D, 3, MAH_OCTAVE_2));        // Triple sharp
ASSERT_N(NOTE(A, -3, MAH_OCTAVE_7), NOTE(A, -3, MAH_OCTAVE_7));      // Triple flat

// Test boundary conditions
ASSERT_N(NOTE(C, 0, MAH_OCTAVE_12), NOTE(C, 0, MAH_OCTAVE_12));      // High pitch boundary
ASSERT_N(NOTE(B, -2, MAH_OCTAVE_0), NOTE(B, -2, MAH_OCTAVE_0));      // Low pitch with double flat