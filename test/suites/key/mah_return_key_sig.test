// major 0
ASSERT_K(mah_return_key_sig(0, MAJOR_KEY), KEY(MAJOR_KEY, 0, 0, NOTE(C, 0, MAH_OCTAVE_0), NOTE_K(
    0
)));

// major sharp
ASSERT_K(mah_return_key_sig(3, MAJOR_KEY), KEY(MAJOR_KEY, 3, 3, NOTE(A, 0, MAH_OCTAVE_0), NOTE_K(
    NOTE(F, 1, MAH_OCTAVE_0),
    NOTE(C, 1, MAH_OCTAVE_0),
    NOTE(G, 1, MAH_OCTAVE_0)
)));

// major flat
ASSERT_K(mah_return_key_sig(-5, MAJOR_KEY), KEY(MAJOR_KEY, -5, 5, NOTE(D, -1, MAH_OCTAVE_0), NOTE_K(
    NOTE(B, -1, MAH_OCTAVE_0),
    NOTE(E, -1, MAH_OCTAVE_0),
    NOTE(A, -1, MAH_OCTAVE_0),
    NOTE(D, -1, MAH_OCTAVE_0),
    NOTE(G, -1, MAH_OCTAVE_0)
)));

// F+
ASSERT_K(mah_return_key_sig(-1, MAJOR_KEY), KEY(MAJOR_KEY, -1, 1, NOTE(F, 0, MAH_OCTAVE_0), NOTE_K(
    NOTE(B, -1, MAH_OCTAVE_0)
)));

// minor sharp
ASSERT_K(mah_return_key_sig(2, MINOR_KEY), KEY(MINOR_KEY, 2, 2, NOTE(B, 0, MAH_OCTAVE_0), NOTE_K(
    NOTE(F, 1, MAH_OCTAVE_0),
    NOTE(C, 1, MAH_OCTAVE_0)
)));

// minor many sharp
ASSERT_K(mah_return_key_sig(5, MINOR_KEY), KEY(MINOR_KEY, 5, 5, NOTE(G, 1, MAH_OCTAVE_0), NOTE_K(
    NOTE(F, 1, MAH_OCTAVE_0),
    NOTE(C, 1, MAH_OCTAVE_0),
    NOTE(G, 1, MAH_OCTAVE_0),
    NOTE(D, 1, MAH_OCTAVE_0),
    NOTE(A, 1, MAH_OCTAVE_0)
)));

// theoretical sharp major
ASSERT_K(mah_return_key_sig(14, MAJOR_KEY), KEY(MAJOR_KEY, 14, 7, NOTE(C, 2, MAH_OCTAVE_0), NOTE_K(
    NOTE(F, 2, MAH_OCTAVE_0),
    NOTE(C, 2, MAH_OCTAVE_0),
    NOTE(G, 2, MAH_OCTAVE_0),
    NOTE(D, 2, MAH_OCTAVE_0),
    NOTE(A, 2, MAH_OCTAVE_0),
    NOTE(E, 2, MAH_OCTAVE_0),
    NOTE(B, 2, MAH_OCTAVE_0)
)));

// theoretical flat minor
ASSERT_K(mah_return_key_sig(-25, MINOR_KEY), KEY(MINOR_KEY, -25, 7, NOTE(F, -3, MAH_OCTAVE_0), NOTE_K(
    NOTE(B, -4, MAH_OCTAVE_0),
    NOTE(E, -4, MAH_OCTAVE_0),
    NOTE(A, -4, MAH_OCTAVE_0),
    NOTE(D, -4, MAH_OCTAVE_0),
    NOTE(G, -3, MAH_OCTAVE_0),
    NOTE(C, -3, MAH_OCTAVE_0),
    NOTE(F, -3, MAH_OCTAVE_0)
)));