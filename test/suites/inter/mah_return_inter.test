// too high quality error
ASSERT_E(mah_return_inter(NOTE(C, 2, MAH_OCTAVE_3), NOTE(G, 4, MAH_OCTAVE_4), &ERR), ERROR_INVALID_QUAL);

// too low quality error
ASSERT_E(mah_return_inter(NOTE(B, 0, MAH_OCTAVE_2), NOTE(F, -3, MAH_OCTAVE_3), &ERR), ERROR_INVALID_QUAL);

// negative octave error
ASSERT_E(mah_return_inter(NOTE(E, -1, MAH_OCTAVE_0), NOTE(B, 0, MAH_OCTAVE_NEG2), &ERR), ERROR_INVALID_RANGE);

// negative interval error
ASSERT_E(mah_return_inter(NOTE(A, 0, MAH_OCTAVE_0), NOTE(F, 0, MAH_OCTAVE_0), &ERR), ERROR_INVALID_RANGE);

// augmented simple interval
ASSERT_I(mah_return_inter(NOTE(F, 2, MAH_OCTAVE_3), NOTE(D, 3, MAH_OCTAVE_4), &ERR), INTER(6, AUGMENTED));

// perfect augmented simple interval
ASSERT_I(mah_return_inter(NOTE(B, 0, MAH_OCTAVE_2), NOTE(F, 2, MAH_OCTAVE_3), &ERR), INTER(5, AUGMENTED));

// perfect augmented compound interval
ASSERT_I(mah_return_inter(NOTE(E, -1, MAH_OCTAVE_0), NOTE(B, 0, MAH_OCTAVE_1), &ERR), INTER(12, AUGMENTED));

// augmented compound interval
ASSERT_I(mah_return_inter(NOTE(G, -3, MAH_OCTAVE_4), NOTE(B, -2, MAH_OCTAVE_7), &ERR), INTER(24, AUGMENTED));

// diminished unison
ASSERT_I(mah_return_inter(NOTE(G, 0, MAH_OCTAVE_3), NOTE(G, -1, MAH_OCTAVE_3), &ERR), INTER(1, DIMINISHED));

// diminished simple interval
ASSERT_I(mah_return_inter(NOTE(A, -5, MAH_OCTAVE_2), NOTE(C, -6, MAH_OCTAVE_3), &ERR), INTER(3, DIMINISHED));

// diminished compound perfect interval
ASSERT_I(mah_return_inter(NOTE(C, -1, MAH_OCTAVE_0), NOTE(F, -2, MAH_OCTAVE_1), &ERR), INTER(11, DIMINISHED));

// diminished compound interval
ASSERT_I(mah_return_inter(NOTE(C, -3, MAH_OCTAVE_4), NOTE(A, -5, MAH_OCTAVE_5), &ERR), INTER(13, DIMINISHED));

// major simple interval
ASSERT_I(mah_return_inter(NOTE(E, 0, MAH_OCTAVE_3), NOTE(D, 1, MAH_OCTAVE_4), &ERR), INTER(7, MAJOR));

// major compound interval
ASSERT_I(mah_return_inter(NOTE(C, -1, MAH_OCTAVE_0), NOTE(B, -1, MAH_OCTAVE_1), &ERR), INTER(14, MAJOR));

// minor simple interval
ASSERT_I(mah_return_inter(NOTE(D, -5, MAH_OCTAVE_2), NOTE(E, -6, MAH_OCTAVE_2), &ERR), INTER(2, MINOR));

// minor compound interval
ASSERT_I(mah_return_inter(NOTE(C, -3, MAH_OCTAVE_4), NOTE(A, -4, MAH_OCTAVE_5), &ERR), INTER(13, MINOR));

// perfect unison
ASSERT_I(mah_return_inter(NOTE(G, 1, MAH_OCTAVE_3), NOTE(G, 1, MAH_OCTAVE_3), &ERR), INTER(1, PERFECT));

// perfect 4
ASSERT_I(mah_return_inter(NOTE(A, 0, MAH_OCTAVE_2), NOTE(D, 0, MAH_OCTAVE_3), &ERR), INTER(4, PERFECT));

// perfect 5
ASSERT_I(mah_return_inter(NOTE(F, -4, MAH_OCTAVE_0), NOTE(C, -4, MAH_OCTAVE_1), &ERR), INTER(5, PERFECT));

// perfect octave
ASSERT_I(mah_return_inter(NOTE(E, 5, MAH_OCTAVE_4), NOTE(E, 5, MAH_OCTAVE_5), &ERR), INTER(8, PERFECT));

// perfect compound interval
ASSERT_I(mah_return_inter(NOTE(B, 7, MAH_OCTAVE_4), NOTE(F, 8, MAH_OCTAVE_6), &ERR), INTER(12, PERFECT));
