// Test invalid null pointer
ASSERT_E(mah_invert_nontertian_chord(NULL, 1, STANDARD, &ERR), ERROR_INVALID_RANGE);

// Test invalid inversion too high
struct mah_nontertian_chord quartal_3 = mah_get_quartal_chord(NOTE(C, 0, MAH_OCTAVE_4), 3, NOTE_N(5, 0), NOTE_N(5, 0), &ERR);
ASSERT_E(mah_invert_nontertian_chord(&quartal_3, 3, STANDARD, &ERR), ERROR_INVALID_INVERSION);

// Test invalid inversion negative
ASSERT_E(mah_invert_nontertian_chord(&quartal_3, -1, STANDARD, &ERR), ERROR_INVALID_INVERSION);

// Test standard inversion on 3-note quartal chord: C4-F4-Bb4 -> F4-Bb4-C5 -> Bb4-C5-F5
ASSERT_NCP(mah_invert_nontertian_chord(&NCHORD, 1, STANDARD, &ERR), 
    mah_get_quartal_chord(NOTE(C, 0, MAH_OCTAVE_4), 3, NOTE_N(5, 0), NOTE_N(5, 0), &ERR),
    NCHD(3, 1, STANDARD,
        NOTE_L(NOTE(C, 0, MAH_OCTAVE_4), NOTE(F, 0, MAH_OCTAVE_4), NOTE(B, -1, MAH_OCTAVE_4)),
        NOTE_L(NOTE(F, 0, MAH_OCTAVE_4), NOTE(B, -1, MAH_OCTAVE_4), NOTE(C, 0, MAH_OCTAVE_5))
    )
);

ASSERT_NCP(mah_invert_nontertian_chord(&NCHORD, 2, STANDARD, &ERR),
    mah_get_quartal_chord(NOTE(C, 0, MAH_OCTAVE_4), 3, NOTE_N(5, 0), NOTE_N(5, 0), &ERR),
    NCHD(3, 2, STANDARD,
        NOTE_L(NOTE(C, 0, MAH_OCTAVE_4), NOTE(F, 0, MAH_OCTAVE_4), NOTE(B, -1, MAH_OCTAVE_4)),
        NOTE_L(NOTE(B, -1, MAH_OCTAVE_4), NOTE(C, 0, MAH_OCTAVE_5), NOTE(F, 0, MAH_OCTAVE_5))
    )
);

// Test full inversion on 3-note quartal chord: C4-F4-Bb4 -> F4-Bb4-C5 (C goes to highest position)
ASSERT_NCP(mah_invert_nontertian_chord(&NCHORD, 1, INV_FULL, &ERR),
    mah_get_quartal_chord(NOTE(C, 0, MAH_OCTAVE_4), 3, NOTE_N(5, 0), NOTE_N(5, 0), &ERR),
    NCHD(3, 1, INV_FULL,
        NOTE_L(NOTE(C, 0, MAH_OCTAVE_4), NOTE(F, 0, MAH_OCTAVE_4), NOTE(B, -1, MAH_OCTAVE_4)),
        NOTE_L(NOTE(F, 0, MAH_OCTAVE_4), NOTE(B, -1, MAH_OCTAVE_4), NOTE(C, 0, MAH_OCTAVE_5))
    )
);

// Test full inversion with 2 inversions on 4-note chord: C4-F4-Bb4-Eb5 
struct mah_nontertian_chord quartal_4 = mah_get_quartal_chord(NOTE(C, 0, MAH_OCTAVE_4), 4, NOTE_N(5, 0), NOTE_N(5, 0), &ERR);
ASSERT_NCP(mah_invert_nontertian_chord(&NCHORD, 2, INV_FULL, &ERR),
    quartal_4,
    NCHD(4, 2, INV_FULL,
        NOTE_L(NOTE(C, 0, MAH_OCTAVE_4), NOTE(F, 0, MAH_OCTAVE_4), NOTE(B, -1, MAH_OCTAVE_4), NOTE(E, -1, MAH_OCTAVE_5)),
        NOTE_L(NOTE(B, -1, MAH_OCTAVE_4), NOTE(E, -1, MAH_OCTAVE_5), NOTE(C, 0, MAH_OCTAVE_6), NOTE(F, 0, MAH_OCTAVE_7))
    )
);

// Test zero inversion (no-op)
ASSERT_NCP(mah_invert_nontertian_chord(&NCHORD, 0, STANDARD, &ERR),
    mah_get_quartal_chord(NOTE(D, 0, MAH_OCTAVE_4), 2, NOTE_N(5, 0), NOTE_N(5, 0), &ERR),
    NCHD(2, 0, STANDARD,
        NOTE_L(NOTE(D, 0, MAH_OCTAVE_4), NOTE(G, 0, MAH_OCTAVE_4)),
        NOTE_L(NOTE(D, 0, MAH_OCTAVE_4), NOTE(G, 0, MAH_OCTAVE_4))
    )
);

// Test with quintal chord - standard inversion: D4-A4-E5 -> A4-E5-D6
struct mah_nontertian_chord inv_quintal_3 = mah_get_quintal_chord(NOTE(D, 0, MAH_OCTAVE_4), 3, NOTE_N(5, 0), NOTE_N(5, 0), &ERR);
ASSERT_NCP(mah_invert_nontertian_chord(&NCHORD, 1, STANDARD, &ERR),
    inv_quintal_3,
    NCHD(3, 1, STANDARD,
        NOTE_L(NOTE(D, 0, MAH_OCTAVE_4), NOTE(A, 0, MAH_OCTAVE_4), NOTE(E, 0, MAH_OCTAVE_5)),
        NOTE_L(NOTE(A, 0, MAH_OCTAVE_4), NOTE(E, 0, MAH_OCTAVE_5), NOTE(D, 0, MAH_OCTAVE_5))
    )
);