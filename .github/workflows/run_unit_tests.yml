name: Run Unit Tests

on:
  push:
    branches: [ "main", "master" ]
    paths-ignore:
      - '**.md'
      
  pull_request:
    branches: [ "main", "master" ]
  
  workflow_dispatch:
    inputs:
      os_filter:
        description: 'Run on specific OS (leave empty for all)'
        required: false
        default: ''
        type: choice
        options:
        - ''
        - 'ubuntu-latest'
        - 'macos-latest' 
        - 'windows-latest'

env:
  BUILD_TYPE: Release

jobs:
  build_and_test:
    strategy:
      fail-fast: false
      matrix:
        os: ${{ github.event.inputs.os_filter != '' && fromJSON(format('["{0}"]', github.event.inputs.os_filter)) || fromJSON('["ubuntu-latest", "macos-latest", "windows-latest"]') }}
        include:
          - os: ubuntu-latest
            name: Linux
          - os: macos-latest  
            name: macOS
          - os: windows-latest
            name: Windows

    runs-on: ${{ matrix.os }}
    name: Build and test on ${{ matrix.name }}

    steps:
    - uses: actions/checkout@v4

    - name: Install build dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake

    - name: Install build dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        # Xcode command line tools should be available by default
        which gcc || xcode-select --install

    # Unix-like systems (Linux/macOS) - use Makefile
    - name: Compile library (Unix)
      if: runner.os != 'Windows'
      run: make compile

    - name: Run tests (Unix)
      if: runner.os != 'Windows' 
      run: make test

    # Windows - use CMake directly since make isn't available
    - name: Configure CMake (Windows)
      if: runner.os == 'Windows'
      run: cmake -B ${{github.workspace}}/build -S "${{github.workspace}}/test" -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build (Windows)
      if: runner.os == 'Windows'
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Run Tests (Windows)
      if: runner.os == 'Windows'
      working-directory: ${{github.workspace}}/build
      run: ./Release/test
